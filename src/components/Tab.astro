---
interface Props {
  tabs?: { label: string; active?: boolean }[]
}

const { tabs = [{ label: 'tab 1', active: true }, { label: 'tab 1' }] } =
  Astro.props
---

<div data-tab class="flex flex-col gap-4">
  <ul
    data-tab-header
    class="flex items-center justify-start w-full overflow-x-auto shadow-[inset_0_-1px_0_0_rgb(var(--ac-color-200))]"
  >
    {
      tabs.map((tab) => (
        <li>
          <button
            class="flex justify-center items-center gap-2 text-neutral-500 hover:text-primary/90 [&[data-active]]:text-primary text-sm [&[data-active]]:font-medium border-b border-transparent hover:border-neutral-400 [&[data-active]]:border-primary px-4 py-2 transition duration-300 ease-in-out"
            data-tab-button
            data-active={tab.active}
          >
            {tab.label}
          </button>
        </li>
      ))
    }
  </ul>
  <div data-tab-body>
    <slot />
  </div>
</div>

<script>
  import { DOMLoaded } from '../ts/utils'
  import { handleTabButtonClick } from '../ts/components/tab.ts'

  DOMLoaded(() => {
    const tabsButtons = document.querySelectorAll(
      '[data-tab-button]'
    ) as NodeListOf<HTMLButtonElement>

    tabsButtons.forEach((button) => {
      button.addEventListener('click', () => handleTabButtonClick(button))
    })
  })
</script>
